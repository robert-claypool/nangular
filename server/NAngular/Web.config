<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=301879
  -->
<configuration>
    <configSections>
        <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    </configSections>
    <connectionStrings>
        <!--This assumes a SQL Server Express named instance of "nangular" with an "nangular" database saved in our App_Data folder.-->
        <!--Use SqlLocalDB to create a named instance:-->
        <!--`SqlLocalDB.exe create nangular` and `SqlLocalDB.exe start nangular`-->
        <!--See db\README.md and db\init.sql for further info.-->
        <add name="DefaultConnectionString"
            connectionString="Server=(localdb)\nangular;Database=nangular;Trusted_Connection=Yes;"
            providerName="System.Data.SqlClient" />
    </connectionStrings>
    <appSettings>
        <add key="webpages:Version" value="3.0.0.0" />
        <add key="webpages:Enabled" value="false" />
        <add key="ClientValidationEnabled" value="true" />
        <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    </appSettings>
    <system.web>
        <!-- Stop attempts to access our cookies from client script, e.g. document.cookie  -->
        <httpCookies httpOnlyCookies="true" requireSSL="true"/>
        <compilation debug="true" targetFramework="4.6.1" />
        <!-- Do not add "X-AspNet-Version" to responses (enableVersionHeader="false") -->
        <httpRuntime targetFramework="4.6.1" enableVersionHeader="false" />
        <httpModules>
        </httpModules>
    </system.web>
    <system.webServer>
        <modules>
        </modules>
        <validation validateIntegratedModeConfiguration="false" />
        <handlers>
            <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
            <remove name="OPTIONSVerbHandler" />
            <remove name="TRACEVerbHandler" />
            <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
        </handlers>
        <httpProtocol>
            <customHeaders>
                <remove name="X-Powered-By"/>
                <!-- Force XSS protection in IE8 and above (useful if XSS protection was disabled by the user) -->
                <add name="X-XSS-Protection" value="1"/>
                <!-- Prevent MIME-type sniffing, https://stackoverflow.com/a/18337753/23566 -->
                <add name="X-Content-Type-Options" value="nosniff"/>
                <!-- Prevent attempts to load our pages in an frame, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options -->
                <add name="X-Frame-Options" value="DENY"/>
                <!-- Disallow HTTP after the browser has once successfully connected via HTTPS, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security -->
                <add name="Strict-Transport-Security" value="max-age=31536000; includeSubDomains"/>
                <!-- Content policies set allowed/disallowed sources of content, https://content-security-policy.com/ ... -->
                <!-- If a trusted source is being blocked, e.g. Google Analytics, then add only that origin to our policy below. -->
                <!-- See examples at https://developers.google.com/web/fundamentals/security/csp/ -->
                <!-- Why 'unsafe-inline' for CSS? Becuase Angular requires it, see https://github.com/angular/angular-cli/issues/3430 -->
                <!-- We assume that JS and CSS from a **production** build are injected into _Layout.cshtml, -->
                <!-- If that isn't true (you are pointing the layout to non-production JS and CSS) then 'unsafe-eval' would also be needed. -->
                <add name="Content-Security-Policy" value="default-src 'self'; style-src 'self' 'unsafe-inline';" />
            </customHeaders>
        </httpProtocol>
    </system.webServer>
    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" />
                <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" />
                <bindingRedirect oldVersion="0.0.0.0-4.0.2.1" newVersion="4.0.2.1" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
                <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
                <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
                <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
                <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
                <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
                <bindingRedirect oldVersion="1.0.0.0-5.2.6.0" newVersion="5.2.6.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-5.2.6.0" newVersion="5.2.6.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Unity.Abstractions" publicKeyToken="6d32ff45e0ccc69f" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-3.3.0.0" newVersion="3.3.0.0" />
            </dependentAssembly>
        </assemblyBinding>
    </runtime>
    <system.codedom>
        <compilers>
            <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701" />
            <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
        </compilers>
    </system.codedom>
</configuration>
